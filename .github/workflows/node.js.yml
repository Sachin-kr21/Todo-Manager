name: CI/CD Integration

on:
  push:
    branches:
      - master


jobs:
  validate-code:
    name: Code validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint || exit 1  
      
      - name: Send Discord notification
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
              "username": "ERROR",
              "content": "CI/CD Pipeline Results",
              "embeds": [
                {
                  "title": "Validation Status",
                  "description": "```${{ job.status }}```",
                  "color": 16711680
                }
              ]
            }' ${{ secrets.DISCORD_WEBHOOK_URL }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: validate-code
    env:
      TEST_DB_URL: ${{ secrets.TEST_DB_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: |
          npm test || exit 1

      - name: Send Discord notification
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "username": "ERROR",
            "content": "CI/CD Pipeline Results",
            "embeds": [
              {
                "title": "Test Status",
                "description": "```${{ job.status }}```",
                "color": 16711680
              }
            ]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}
  build-and-deploy:
    name: Build and Push Docker Img
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image.
        run: docker build -t sachinkumar/todo:todo .
      - name: Push Docker image
        run: docker push sachinkumar/todo:todo
      - name: Send Discord notification
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
              "username": "ERROR",
              "content": "CI/CD Pipeline Results",
              "embeds": [
                {
                  "title": "Deployment Status",
                  "description": "```${{ job.status }}```",
                  "color": 16711680
                }
              ]
            }' ${{ secrets.DISCORD_WEBHOOK_URL }}

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Send Discord notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "username": "CI/CD Bot",
            "content": "CI/CD Pipeline Results",
            "embeds": [
              {
                "title": "Validation, Testing, and Deployment Summary",
                "fields": [
                  {
                    "name": "Validation",
                    "value": "Linting passed successfully.",
                    "inline": true
                  },
                  {
                    "name": "Testing",
                    "value": "Unit tests passed successfully.",
                    "inline": true
                  },
                  {
                    "name": "Deployment",
                    "value": "Deployment completed successfully.",
                    "inline": true
                  }
                ],
                "color": 65280
              },
              {
                "title": "Workflow Status",
                "description": "No Failures",
                "color": 16711680
              }
            ]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}